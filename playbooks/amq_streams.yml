---
- ansible.builtin.import_playbook: community.fqcn_migration.fqcn_migration
  vars:
    upstream_name: amq_streams
    downstream_name: amq_streams
    downstream_namespace: redhat
    upstream_namespace: middleware_automation
    project_git_url: https://github.com/ansible-middleware/amq_streams.git
    upstream_downstream_collections_map:
      - { upstream_name: 'middleware_automation.common', downstream_name: 'redhat.runtimes_common' }
    galaxy:
      documentation: https://access.redhat.com/documentation/en-us/red_hat_amq_streams
      homepage: https://access.redhat.com/products/red-hat-amq-streams
    # anything inside <!--start {{ <downstream_placeholder>_delete }} --> and <!--end {{ <downstream_placeholder>_delete }} --> will be removed
    downstream_placeholder_delete:
      - build_status
    # anything inside <!--start {{ <downstream_placeholder>_content }} --> and <!--end {{ <downstream_placeholder>_content }} --> will be replaced with content
    downstream_placeholder_content:
      - placeholder: galaxy_download
        content: |
          ### Installing the Collection from Automation Hub

          Before using the collection, you need to setup Ansible Automation Hub as galaxy server; then install it via the CLI:

              ansible-galaxy collection install redhat.amq_streams
      - placeholder: support
        content: |
          ## Support

          redhat.amq_streams collection v{{ galaxy_version | default('0.0.0-dev') }} is for [Technical Preview](https://access.redhat.com/support/offerings/techpreview).
          If you have any issues or questions related to collection, please don't hesitate to contact us on <Ansible-middleware-core@redhat.com> or open an issue on
          <https://github.com/ansible-middleware/amq_streams/issues>
      - placeholder: rhn_credentials
        content: |
          #### Downloading from the Customer Portal

          The `amq_streams` role supports downloading and installing from the Red Hat Customer Portal using credentials associated to a service account. After having
          authenticated in the customer portal, navigate to the hybrid cloud console, and select the [services account tab](https://console.redhat.com/application-services/service-accounts)
          to create one, if needed. Client ID and Client Secret associated to the service account need to be provided to the collection using the following variables:
          ```
          rhn_username{{':'}} '<client_id>'
          rhn_password{{':'}} '<client_secret>'
          ```

          The downloaded product archive will be stored in the controller working directory, and then distributed to target nodes.
