---
- ansible.builtin.import_playbook: community.fqcn_migration.fqcn_migration
  vars:
    upstream_name: wildfly
    downstream_name: eap
    downstream_namespace: 'redhat'
    upstream_namespace: 'middleware_automation'
    project_git_url: https://github.com/ansible-middleware/wildfly.git

    upstream_downstream_collections_map:
      - { upstream_name: 'middleware_automation.common', downstream_name: 'redhat.runtimes_common' }
      - { upstream_name: 'middleware_automation.wildfly', downstream_name: 'redhat.eap' }

    post_processors_replacements:
     - match: "eap_install_workdir: /opt/eap"
       replace: "eap_install_workdir: /opt"
     - match: "eap[.]statistics-enabled"
       replace: "wildfly.statistics-enabled"
     - match: "eap-configuration:"
       replace: "wildfly-configuration:"
     - match: "repo1.maven.org/maven2/org/eap/prospero"
       replace: "repo1.maven.org/maven2/org/wildfly/prospero"
     - match: "eap_prospero_name: prospero"
       replace: "eap_prospero_name: jboss-eap-installation-manager"
     - match: "eap_prospero_version: 1.2.0.Final"
       replace: "eap_prospero_version: 1.1.5.Final-redhat-00002"
     - match: "eap_prospero_profile_name: eap"
       replace: "eap_prospero_profile_name: eap-8.0"

    galaxy:
      documentation: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform
      homepage: https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform
    # anything inside <!--start {{ <downstream_placeholder>_delete }} --> and <!--end {{ <downstream_placeholder>_delete }} --> will be removed
    excluded_roles_from_sownstream:
      - roles/wildfly_subs
    downstream_placeholder_delete:
      - build_status
    # anything inside <!--start {{ <downstream_placeholder>_content }} --> and <!--end {{ <downstream_placeholder>_content }} --> will be replaced with content
    downstream_placeholder_content:
      - placeholder: roles_paths
        content: |
          ### Roles
          * [eap_install](https://console.redhat.com/ansible/automation-hub/repo/published/redhat/eap/content/role/eap_install/): download and install
          * [eap_systemd](https://console.redhat.com/ansible/automation-hub/repo/published/redhat/eap/content/role/eap_systemd/): configure systemd unit
          * [eap_driver](https://console.redhat.com/ansible/automation-hub/repo/published/redhat/eap/content/role/eap_driver/): install additional driver modules (ie. JDBC)
          * [eap_utils](https://console.redhat.com/ansible/automation-hub/repo/published/redhat/eap/content/role/eap_utils/): utilities related to EAP
          * [eap_validation](https://console.redhat.com/ansible/automation-hub/repo/published/redhat/eap/content/role/eap_validation/): validate deployed installation
          * [eap_uninstall](https://console.redhat.com/ansible/automation-hub/repo/published/redhat/eap/content/role/eap_uninstall/): restore status pre wildfly_install
      - placeholder: galaxy_download
        content: |
          ### Installing the Collection from Automation Hub

          Before using the collection, you need to setup Ansible Automation Hub as galaxy server; then install it via the CLI:

              ansible-galaxy collection install redhat.eap
      - placeholder: support
        content: |
          ## Support

          redhat.eap collection v{{ galaxy_version | default('0.0.0-dev') }} is for [Technical Preview](https://access.redhat.com/support/offerings/techpreview).
          If you have any issues or questions related to collection, please don't hesitate to contact us on <Ansible-middleware-core@redhat.com> or open an issue on
          <https://github.com/ansible-middleware/wildfly/issues>
      - placeholder: rhn_credentials
        content: |
          ## Downloading products from the Customer Portal

          The `redhat.eap.eap_install` role supports downloading and installing from the Red Hat Customer Portal using credentials associated to a service account. After
          login in the customer portal and navigating to the hybrid cloud console, select the [services account tab](https://console.redhat.com/application-services/service-accounts)
          to create one, if needed. Client ID and Client secret associated to the service account needs to be provided with the following variables are defined:
          ```
          rhn_username{{':'}} '<client_id>'
          rhn_password{{':'}} '<client_secret>'
          ```

          The downloaded product archive will be stored in the controller working directory, and then distributed to target nodes.

          When patching is requested, via the `eap_apply_cp` variable, the most recently published cumulative patch will be installed; to use a specific patch version instead,
          set it with the `eap_patch_version` variable.

          NOTE: downgrading patches is not supported.
